
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: plugs.integration.siliconhills.dev
spec:
  group: integration.siliconhills.dev
  names:
    kind: Plug
    listKind: PlugList
    plural: plugs
    singular: plug
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Plug is the Schema for the plugs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PlugSpec defines the desired state of Plug
            properties:
              configEndpoint:
                description: config endpoint
                type: string
              configMapper:
                description: config mapper
                type: string
              interface:
                description: interface
                properties:
                  name:
                    description: name
                    type: string
                  namespace:
                    description: namespace
                    type: string
                required:
                - name
                type: object
              interfaceVersions:
                description: interface versions
                type: string
              meta:
                description: meta
                type: string
              namespaceScope:
                description: namspace scope
                type: string
              socket:
                description: socket
                properties:
                  name:
                    description: name
                    type: string
                  namespace:
                    description: namespace
                    type: string
                required:
                - name
                type: object
              vars:
                description: A var is a name (e.g. FOO) associated with a field in
                  a specific resource instance.  The field must contain a value of
                  type string/bool/int/float, and defaults to the name field of the
                  instance.  Any appearance of "$(FOO)" in the object spec will be
                  replaced, after the final value of the specified field has been
                  determined.
                items:
                  description: Var represents a variable whose value will be sourced
                    from a field in a Kubernetes object.
                  properties:
                    fieldref:
                      description: 'FieldRef refers to the field of the object referred
                        to by ObjRef whose value will be extracted for use in replacing
                        $(FOO). If unspecified, this defaults to fieldPath: $defaultFieldPath'
                      properties:
                        fieldPath:
                          type: string
                      type: object
                    name:
                      description: Value of identifier name e.g. FOO used in container
                        args, annotations Appears in pod template as $(FOO)
                      type: string
                    objref:
                      description: ObjRef must refer to a Kubernetes resource under
                        the purview of this kustomization. ObjRef should use the raw
                        name of the object (the name specified in its YAML, before
                        addition of a namePrefix and a nameSuffix).
                      properties:
                        apiVersion:
                          type: string
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - name
                  - objref
                  type: object
                type: array
            type: object
          status:
            description: PlugStatus defines the observed state of Plug
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: integration plug phase (Pending, Succeeded, Failed, Unknown)
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
