// +build !ignore_autogenerated

/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	"sigs.k8s.io/kustomize/api/types"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlug) DeepCopyInto(out *IntegrationPlug) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlug.
func (in *IntegrationPlug) DeepCopy() *IntegrationPlug {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlug)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationPlug) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugList) DeepCopyInto(out *IntegrationPlugList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationPlug, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugList.
func (in *IntegrationPlugList) DeepCopy() *IntegrationPlugList {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationPlugList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugSpec) DeepCopyInto(out *IntegrationPlugSpec) {
	*out = *in
	out.Socket = in.Socket
	in.Kustomization.DeepCopyInto(&out.Kustomization)
	if in.Replications != nil {
		in, out := &in.Replications, &out.Replications
		*out = make([]*Replication, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Replication)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugSpec.
func (in *IntegrationPlugSpec) DeepCopy() *IntegrationPlugSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugSpecMergeConfigmaps) DeepCopyInto(out *IntegrationPlugSpecMergeConfigmaps) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugSpecMergeConfigmaps.
func (in *IntegrationPlugSpecMergeConfigmaps) DeepCopy() *IntegrationPlugSpecMergeConfigmaps {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugSpecMergeConfigmaps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugSpecMergeSecrets) DeepCopyInto(out *IntegrationPlugSpecMergeSecrets) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugSpecMergeSecrets.
func (in *IntegrationPlugSpecMergeSecrets) DeepCopy() *IntegrationPlugSpecMergeSecrets {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugSpecMergeSecrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugSpecSocket) DeepCopyInto(out *IntegrationPlugSpecSocket) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugSpecSocket.
func (in *IntegrationPlugSpecSocket) DeepCopy() *IntegrationPlugSpecSocket {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugSpecSocket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugSpecWait) DeepCopyInto(out *IntegrationPlugSpecWait) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*IntegrationPlugSpecWaitResource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(IntegrationPlugSpecWaitResource)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugSpecWait.
func (in *IntegrationPlugSpecWait) DeepCopy() *IntegrationPlugSpecWait {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugSpecWait)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugSpecWaitResource) DeepCopyInto(out *IntegrationPlugSpecWaitResource) {
	*out = *in
	if in.StatusPhases != nil {
		in, out := &in.StatusPhases, &out.StatusPhases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugSpecWaitResource.
func (in *IntegrationPlugSpecWaitResource) DeepCopy() *IntegrationPlugSpecWaitResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugSpecWaitResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPlugStatus) DeepCopyInto(out *IntegrationPlugStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPlugStatus.
func (in *IntegrationPlugStatus) DeepCopy() *IntegrationPlugStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationPlugStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSocket) DeepCopyInto(out *IntegrationSocket) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSocket.
func (in *IntegrationSocket) DeepCopy() *IntegrationSocket {
	if in == nil {
		return nil
	}
	out := new(IntegrationSocket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationSocket) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSocketList) DeepCopyInto(out *IntegrationSocketList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationSocket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSocketList.
func (in *IntegrationSocketList) DeepCopy() *IntegrationSocketList {
	if in == nil {
		return nil
	}
	out := new(IntegrationSocketList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationSocketList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSocketSpec) DeepCopyInto(out *IntegrationSocketSpec) {
	*out = *in
	in.Wait.DeepCopyInto(&out.Wait)
	if in.Replications != nil {
		in, out := &in.Replications, &out.Replications
		*out = make([]*Replication, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Replication)
				**out = **in
			}
		}
	}
	if in.Hooks != nil {
		in, out := &in.Hooks, &out.Hooks
		*out = make([]*IntegrationSocketSpecHook, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(IntegrationSocketSpecHook)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSocketSpec.
func (in *IntegrationSocketSpec) DeepCopy() *IntegrationSocketSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationSocketSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSocketSpecHook) DeepCopyInto(out *IntegrationSocketSpecHook) {
	*out = *in
	in.Job.DeepCopyInto(&out.Job)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSocketSpecHook.
func (in *IntegrationSocketSpecHook) DeepCopy() *IntegrationSocketSpecHook {
	if in == nil {
		return nil
	}
	out := new(IntegrationSocketSpecHook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSocketStatus) DeepCopyInto(out *IntegrationSocketStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSocketStatus.
func (in *IntegrationSocketStatus) DeepCopy() *IntegrationSocketStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationSocketStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationSpec) DeepCopyInto(out *KustomizationSpec) {
	*out = *in
	in.Configuration.DeepCopyInto(&out.Configuration)
	if in.Create != nil {
		in, out := &in.Create, &out.Create
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CommonAnnotations != nil {
		in, out := &in.CommonAnnotations, &out.CommonAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CommonLabels != nil {
		in, out := &in.CommonLabels, &out.CommonLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ConfigMapGenerator != nil {
		in, out := &in.ConfigMapGenerator, &out.ConfigMapGenerator
		*out = make([]types.ConfigMapArgs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Crds != nil {
		in, out := &in.Crds, &out.Crds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GeneratorOptions != nil {
		in, out := &in.GeneratorOptions, &out.GeneratorOptions
		*out = new(types.GeneratorOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]types.Image, len(*in))
		copy(*out, *in)
	}
	if in.Patches != nil {
		in, out := &in.Patches, &out.Patches
		*out = make([]types.Patch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PatchesJson6902 != nil {
		in, out := &in.PatchesJson6902, &out.PatchesJson6902
		*out = make([]types.Patch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PatchesStrategicMerge != nil {
		in, out := &in.PatchesStrategicMerge, &out.PatchesStrategicMerge
		*out = make([]types.PatchStrategicMerge, len(*in))
		copy(*out, *in)
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make([]types.Replica, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*types.Selector, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(types.Selector)
				**out = **in
			}
		}
	}
	if in.SecretGenerator != nil {
		in, out := &in.SecretGenerator, &out.SecretGenerator
		*out = make([]types.SecretArgs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Vars != nil {
		in, out := &in.Vars, &out.Vars
		*out = make([]types.Var, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationSpec.
func (in *KustomizationSpec) DeepCopy() *KustomizationSpec {
	if in == nil {
		return nil
	}
	out := new(KustomizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Replication) DeepCopyInto(out *Replication) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Replication.
func (in *Replication) DeepCopy() *Replication {
	if in == nil {
		return nil
	}
	out := new(Replication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformerConfig) DeepCopyInto(out *TransformerConfig) {
	*out = *in
	if in.CommonAnnotations != nil {
		in, out := &in.CommonAnnotations, &out.CommonAnnotations
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.CommonLabels != nil {
		in, out := &in.CommonLabels, &out.CommonLabels
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.NameSuffix != nil {
		in, out := &in.NameSuffix, &out.NameSuffix
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
	if in.VarReference != nil {
		in, out := &in.VarReference, &out.VarReference
		*out = make(types.FsSlice, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformerConfig.
func (in *TransformerConfig) DeepCopy() *TransformerConfig {
	if in == nil {
		return nil
	}
	out := new(TransformerConfig)
	in.DeepCopyInto(out)
	return out
}
